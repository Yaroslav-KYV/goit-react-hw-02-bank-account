{"version":3,"sources":["components/Controls/Controls.styled.js","components/Controls/index.js","components/Balance/Balance.styled.js","components/Balance/index.js","components/TransactionHistory/TransactionsHistory.styled.js","components/TransactionHistory/index.js","components/Dashboard/index.js","App.js","index.js"],"names":["StyledSection","styled","section","StyledInput","input","StyledButton","button","toast","configure","Controls","state","amountMoney","handleDeposit","props","onDeposit","setState","handleWithdraw","onWithdraw","handleChange","e","currentTarget","value","this","type","name","min","onChange","onClick","Component","StyledSpan","span","Balance","balance","income","expenses","StyledTable","table","StyledThead","thead","StyledTh","th","StyledTbody","tbody","StyledTd","td","Transactions","items","length","map","item","key","id","amount","date","Transaction","Deposit","Withdraw","Message","InsufficientFunds","EnterAmount","Dashboard","transactions","createTransaction","transactionType","amountConvertToFloat","parseFloat","uuidv1","Date","toLocaleString","transaction","error","countMoney","reduce","acc","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc2d7879.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  box-shadow: 0px 2px 3px 0px rgba(0, 0, 0, 0.25);\n  background-color: rgb(5, 42, 84);\n  padding: 4rem 24rem;\n  display: flex;\n  justify-content: space-evenly;\n`;\nexport const StyledInput = styled.input`\n  border-radius: 5px;\n  border: none;\n  padding: 15px 10px;\n  width: 260px;\n  height: 40px;\n  color: rgb(126, 123, 123);\n  font-size: 25px;\n`;\nexport const StyledButton = styled.button`\n  border-radius: 5px;\n  border: none;\n  width: 187px;\n  height: 40px;\n  background-color: rgb(56, 132, 254);\n  color: rgb(255, 255, 255);\n  font-family: 'Roboto', sans-serif;\n  font-size: 20px;\n  font-weight: bold;\n`;\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { StyledSection, StyledInput, StyledButton } from './Controls.styled';\n\ntoast.configure();\n\nexport default class Controls extends Component {\n  static propTypes = {\n    onDeposit: propTypes.func.isRequired,\n    onWithdraw: propTypes.func.isRequired,\n  };\n\n  state = {\n    amountMoney: 0,\n  };\n\n  handleDeposit = () => {\n    this.props.onDeposit(this.state.amountMoney);\n    this.setState({ amountMoney: 0 });\n  };\n\n  handleWithdraw = () => {\n    this.props.onWithdraw(this.state.amountMoney);\n    this.setState({ amountMoney: 0 });\n  };\n\n  handleChange = e => {\n    this.setState({\n      amountMoney: e.currentTarget.value,\n    });\n  };\n\n  render() {\n    const { amountMoney } = this.state;\n    return (\n      <StyledSection>\n        <StyledInput\n          type=\"number\"\n          name=\"amount\"\n          min=\"0\"\n          value={amountMoney}\n          onChange={this.handleChange}\n        />\n        <StyledButton type=\"button\" onClick={this.handleDeposit}>\n          Deposit\n        </StyledButton>\n        <StyledButton type=\"button\" onClick={this.handleWithdraw}>\n          Withdraw\n        </StyledButton>\n      </StyledSection>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  display: flex;\n  justify-content: center;\n  padding: 40px;\n`;\nexport const StyledSpan = styled.span`\n  color: #5c6975;\n  font-weight: bold;\n\n  :first-child {\n    color: #98c665;\n  }\n\n  :nth-child(2),\n  :nth-child(4) {\n    padding: 2px 20px 0 5px;\n  }\n\n  :nth-child(3) {\n    color: #e73439;\n  }\n\n  :nth-child(5) {\n    padding-top: 2px;\n  }\n`;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { StyledSection, StyledSpan } from './Balance.styled';\n\nconst Balance = ({ balance, income, expenses }) => (\n  <StyledSection>\n    <StyledSpan>&#8593;</StyledSpan>\n    <StyledSpan>{income}$</StyledSpan>\n    <StyledSpan>&#8595;</StyledSpan>\n    <StyledSpan>{expenses}$</StyledSpan>\n    <StyledSpan>Balance: {balance}$</StyledSpan>\n  </StyledSection>\n);\n\nBalance.propTypes = {\n  balance: propTypes.number.isRequired,\n  income: propTypes.number.isRequired,\n  expenses: propTypes.number.isRequired,\n};\n\nexport default Balance;\n","import styled from 'styled-components';\n\nexport const StyledTable = styled.table`\n  border-collapse: collapse;\n  margin: 0 auto;\n  padding: 0;\n  width: 60%;\n  text-align: center;\n  box-shadow: 1px 1px 3px 1px rgba(191, 205, 222, 0.75);\n`;\n\nexport const StyledThead = styled.thead`\n  font-family: 'Helvetica Neue', sans-serif;\n  background-color: #ebeef2;\n  padding: 10px;\n  text-transform: uppercase;\n  font-size: 13px;\n`;\nexport const StyledTh = styled.th`\n  border-right: 1px solid #fff;\n  :last-child {\n    border: none;\n    width: 30%;\n    padding: 30px;\n  }\n`;\nexport const StyledTbody = styled.tbody`\n  color: #5c6975;\n  font-weight: 300;\n`;\nexport const StyledTd = styled.td`\n  border-right: 1px solid #e0e6e7;\n  border-bottom: 1px solid #e0e6e7;\n  width: 30%;\n  padding: 30px;\n`;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  StyledTable,\n  StyledThead,\n  StyledTh,\n  StyledTbody,\n  StyledTd,\n} from './TransactionsHistory.styled';\n\nconst Transactions = ({ items }) => {\n  return (\n    <>\n      {items.length > 0 && (\n        <StyledTable>\n          <StyledThead>\n            <tr>\n              <StyledTh>Transaction</StyledTh>\n              <StyledTh>Amount</StyledTh>\n              <StyledTh>Date</StyledTh>\n            </tr>\n          </StyledThead>\n          <StyledTbody>\n            {items.map(item => (\n              <tr key={item.id}>\n                <StyledTd>{item.type}</StyledTd>\n                <StyledTd>{item.amount}$</StyledTd>\n                <StyledTd>{item.date}</StyledTd>\n              </tr>\n            ))}\n          </StyledTbody>\n        </StyledTable>\n      )}\n    </>\n  );\n};\n\nTransactions.propTypes = {\n  items: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string,\n      type: propTypes.string,\n      amount: propTypes.number,\n      date: propTypes.string,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default Transactions;\n","import React, { Component } from 'react';\nimport uuidv1 from 'uuid/v1';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Controls from '../Controls';\nimport Balance from '../Balance';\nimport Transactions from '../TransactionHistory';\n\ntoast.configure();\n\nconst Transaction = {\n  Deposit: 'Deposit',\n  Withdraw: 'Withdraw',\n};\n\nconst Message = {\n  InsufficientFunds: 'Insufficient funds to carry out the operation',\n  EnterAmount: 'Please enter the amount to perform the transaction!',\n};\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n  };\n\n  createTransaction = (amount, transactionType) => {\n    const amountConvertToFloat = parseFloat(amount);\n    const transaction = {\n      id: uuidv1(),\n      type: transactionType,\n      amount: amountConvertToFloat,\n      date: new Date().toLocaleString(),\n    };\n\n    return transaction;\n  };\n\n  onDeposit = amount => {\n    if (amount === '' || amount <= 0) {\n      toast(Message.EnterAmount);\n      return;\n    }\n    const transaction = this.createTransaction(amount, Transaction.Deposit);\n    this.setState(state => ({\n      transactions: [...state.transactions, transaction],\n      balance: state.balance + transaction.amount,\n    }));\n  };\n\n  onWithdraw = amount => {\n    if (amount === '' || amount <= 0) {\n      toast(Message.EnterAmount);\n      return;\n    }\n    if (amount > this.state.balance) {\n      toast.error(Message.InsufficientFunds);\n      return;\n    }\n    const transaction = this.createTransaction(amount, Transaction.Withdraw);\n\n    this.setState(state => ({\n      transactions: [...state.transactions, transaction],\n      balance: state.balance - transaction.amount,\n    }));\n  };\n\n  countMoney = () => {\n    const { transactions } = this.state;\n\n    return transactions.reduce(\n      (acc, transaction) => {\n        acc[transaction.type] += transaction.amount;\n        return acc;\n      },\n      {\n        Deposit: 0,\n        Withdraw: 0,\n      },\n    );\n  };\n\n  render() {\n    const { balance, transactions } = this.state;\n    const income = this.countMoney().Deposit;\n    const expenses = this.countMoney().Withdraw;\n    return (\n      <div>\n        <Controls onDeposit={this.onDeposit} onWithdraw={this.onWithdraw} />\n        <Balance balance={balance} income={income} expenses={expenses} />\n        <Transactions items={transactions} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Dashboard from './components/Dashboard';\nimport './styles.css';\n\nconst App = () => (\n  <>\n    <Dashboard />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}